// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: staticmapdata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf.Statichousedata
{

    /// <summary>Holder for reflection information generated from staticmapdata.proto</summary>
    public static partial class StaticmapdataReflection
    {

        #region Descriptor
        /// <summary>File descriptor for staticmapdata.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static StaticmapdataReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "ChNzdGF0aWNtYXBkYXRhLnByb3RvEhhwcm90b2J1Zi5zdGF0aWNob3VzZWRh",
                  "dGEiewoPU3RhdGljSG91c2VEYXRhEjgKB21hcGRhdGEYASADKAsyJy5wcm90",
                  "b2J1Zi5zdGF0aWNob3VzZWRhdGEuU3RhdGljTWFwRGF0YRIuCgVob3VzZRgD",
                  "IAMoCzIfLnByb3RvYnVmLnN0YXRpY2hvdXNlZGF0YS5Ib3VzZSI8Cg1Ib3Vz",
                  "ZVBvc2l0aW9uEg0KBXBvc194GAEgASgNEg0KBXBvc195GAIgASgNEg0KBXBv",
                  "c196GAMgASgNItwBCgVIb3VzZRIQCghob3VzZV9pZBgBIAEoDRIMCgRuYW1l",
                  "GAIgASgJEhUKDXVua25vd25zdHJpbmcYAyABKAkSDQoFcHJpY2UYBCABKA0S",
                  "DAoEYmVkcxgFIAEoDRI+Cg1ob3VzZVBvc2l0aW9uGAYgASgLMicucHJvdG9i",
                  "dWYuc3RhdGljaG91c2VkYXRhLkhvdXNlUG9zaXRpb24SEAoIc2l6ZV9zcW0Y",
                  "ByABKA0SEQoJZ3VpbGRoYWxsGAggASgIEgwKBGNpdHkYCSABKAkSDAoEc2hv",
                  "cBgKIAEoCCJPChRIb3VzZVBvc2l0aW9uVG9wTGVmdBIRCglwb3NpdGlvbngY",
                  "ASABKA0SEQoJcG9zaXRpb255GAIgASgNEhEKCXBvc2l0aW9uehgDIAEoDSJK",
                  "Cg9Ib3VzZVNpemVTcXVhcmUSEQoJcG9zaXRpb254GAEgASgNEhEKCXBvc2l0",
                  "aW9ueRgCIAEoDRIRCglwb3NpdGlvbnoYAyABKA0iJAoQU3FtSXRlcmF0b3JW",
                  "YWx1ZRIQCghjbGllbnRJRBgBIAEoDSJbCgxTcW1TZXJpYWxpemUSOAoEaXRl",
                  "bRgBIAMoCzIqLnByb3RvYnVmLnN0YXRpY2hvdXNlZGF0YS5TcW1JdGVyYXRv",
                  "clZhbHVlEhEKCWp1bXBFbXB0eRgCIAEoDSJRChFIb3VzZVNlcmlhbGl6ZVNx",
                  "bRI8CgxzcW1zZXJpYWxpemUYAyADKAsyJi5wcm90b2J1Zi5zdGF0aWNob3Vz",
                  "ZWRhdGEuU3FtU2VyaWFsaXplIk8KDkhvdXNlU2VyaWFsaXplEj0KCGhvdXNl",
                  "c3FtGAIgASgLMisucHJvdG9idWYuc3RhdGljaG91c2VkYXRhLkhvdXNlU2Vy",
                  "aWFsaXplU3FtIskBCglIb3VzZURhdGESPwoHdG9wbGVmdBgBIAEoCzIuLnBy",
                  "b3RvYnVmLnN0YXRpY2hvdXNlZGF0YS5Ib3VzZVBvc2l0aW9uVG9wTGVmdBI+",
                  "Cgtob3VzZXNxdWFyZRgCIAEoCzIpLnByb3RvYnVmLnN0YXRpY2hvdXNlZGF0",
                  "YS5Ib3VzZVNpemVTcXVhcmUSOwoJc2VyaWFsaXplGAMgASgLMigucHJvdG9i",
                  "dWYuc3RhdGljaG91c2VkYXRhLkhvdXNlU2VyaWFsaXplIlgKDVN0YXRpY01h",
                  "cERhdGESDwoHaG91c2VpZBgBIAEoDRI2Cglob3VzZWRhdGEYAiABKAsyIy5w",
                  "cm90b2J1Zi5zdGF0aWNob3VzZWRhdGEuSG91c2VEYXRh"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.StaticHouseData), global::Protobuf.Statichousedata.StaticHouseData.Parser, new[]{ "Mapdata", "House" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.HousePosition), global::Protobuf.Statichousedata.HousePosition.Parser, new[]{ "PosX", "PosY", "PosZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.House), global::Protobuf.Statichousedata.House.Parser, new[]{ "HouseId", "Name", "Unknownstring", "Price", "Beds", "HousePosition", "SizeSqm", "Guildhall", "City", "Shop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.HousePositionTopLeft), global::Protobuf.Statichousedata.HousePositionTopLeft.Parser, new[]{ "Positionx", "Positiony", "Positionz" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.HouseSizeSquare), global::Protobuf.Statichousedata.HouseSizeSquare.Parser, new[]{ "Positionx", "Positiony", "Positionz" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.SqmIteratorValue), global::Protobuf.Statichousedata.SqmIteratorValue.Parser, new[]{ "ClientID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.SqmSerialize), global::Protobuf.Statichousedata.SqmSerialize.Parser, new[]{ "Item", "JumpEmpty" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.HouseSerializeSqm), global::Protobuf.Statichousedata.HouseSerializeSqm.Parser, new[]{ "Sqmserialize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.HouseSerialize), global::Protobuf.Statichousedata.HouseSerialize.Parser, new[]{ "Housesqm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.HouseData), global::Protobuf.Statichousedata.HouseData.Parser, new[]{ "Topleft", "Housesquare", "Serialize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.Statichousedata.StaticMapData), global::Protobuf.Statichousedata.StaticMapData.Parser, new[]{ "Houseid", "Housedata" }, null, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class StaticHouseData : pb::IMessage<StaticHouseData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<StaticHouseData> _parser = new pb::MessageParser<StaticHouseData>(() => new StaticHouseData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StaticHouseData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StaticHouseData()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StaticHouseData(StaticHouseData other) : this()
        {
            mapdata_ = other.mapdata_.Clone();
            house_ = other.house_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StaticHouseData Clone()
        {
            return new StaticHouseData(this);
        }

        /// <summary>Field number for the "mapdata" field.</summary>
        public const int MapdataFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Protobuf.Statichousedata.StaticMapData> _repeated_mapdata_codec
            = pb::FieldCodec.ForMessage(10, global::Protobuf.Statichousedata.StaticMapData.Parser);
        private readonly pbc::RepeatedField<global::Protobuf.Statichousedata.StaticMapData> mapdata_ = new pbc::RepeatedField<global::Protobuf.Statichousedata.StaticMapData>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protobuf.Statichousedata.StaticMapData> Mapdata
        {
            get { return mapdata_; }
        }

        /// <summary>Field number for the "house" field.</summary>
        public const int HouseFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Protobuf.Statichousedata.House> _repeated_house_codec
            = pb::FieldCodec.ForMessage(26, global::Protobuf.Statichousedata.House.Parser);
        private readonly pbc::RepeatedField<global::Protobuf.Statichousedata.House> house_ = new pbc::RepeatedField<global::Protobuf.Statichousedata.House>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protobuf.Statichousedata.House> House
        {
            get { return house_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as StaticHouseData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StaticHouseData other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!mapdata_.Equals(other.mapdata_)) return false;
            if (!house_.Equals(other.house_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= mapdata_.GetHashCode();
            hash ^= house_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      mapdata_.WriteTo(output, _repeated_mapdata_codec);
      house_.WriteTo(output, _repeated_house_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            mapdata_.WriteTo(ref output, _repeated_mapdata_codec);
            house_.WriteTo(ref output, _repeated_house_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += mapdata_.CalculateSize(_repeated_mapdata_codec);
            size += house_.CalculateSize(_repeated_house_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StaticHouseData other)
        {
            if (other == null)
            {
                return;
            }
            mapdata_.Add(other.mapdata_);
            house_.Add(other.house_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mapdata_.AddEntriesFrom(input, _repeated_mapdata_codec);
            break;
          }
          case 26: {
            house_.AddEntriesFrom(input, _repeated_house_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            mapdata_.AddEntriesFrom(ref input, _repeated_mapdata_codec);
                            break;
                        }
                    case 26:
                        {
                            house_.AddEntriesFrom(ref input, _repeated_house_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class HousePosition : pb::IMessage<HousePosition>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<HousePosition> _parser = new pb::MessageParser<HousePosition>(() => new HousePosition());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HousePosition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HousePosition()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HousePosition(HousePosition other) : this()
        {
            _hasBits0 = other._hasBits0;
            posX_ = other.posX_;
            posY_ = other.posY_;
            posZ_ = other.posZ_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HousePosition Clone()
        {
            return new HousePosition(this);
        }

        /// <summary>Field number for the "pos_x" field.</summary>
        public const int PosXFieldNumber = 1;
        private readonly static uint PosXDefaultValue = 0;

        private uint posX_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PosX
        {
            get { if ((_hasBits0 & 1) != 0) { return posX_; } else { return PosXDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                posX_ = value;
            }
        }
        /// <summary>Gets whether the "pos_x" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPosX
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "pos_x" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPosX()
        {
            _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "pos_y" field.</summary>
        public const int PosYFieldNumber = 2;
        private readonly static uint PosYDefaultValue = 0;

        private uint posY_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PosY
        {
            get { if ((_hasBits0 & 2) != 0) { return posY_; } else { return PosYDefaultValue; } }
            set
            {
                _hasBits0 |= 2;
                posY_ = value;
            }
        }
        /// <summary>Gets whether the "pos_y" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPosY
        {
            get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "pos_y" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPosY()
        {
            _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "pos_z" field.</summary>
        public const int PosZFieldNumber = 3;
        private readonly static uint PosZDefaultValue = 0;

        private uint posZ_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PosZ
        {
            get { if ((_hasBits0 & 4) != 0) { return posZ_; } else { return PosZDefaultValue; } }
            set
            {
                _hasBits0 |= 4;
                posZ_ = value;
            }
        }
        /// <summary>Gets whether the "pos_z" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPosZ
        {
            get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "pos_z" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPosZ()
        {
            _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as HousePosition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HousePosition other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (PosX != other.PosX) return false;
            if (PosY != other.PosY) return false;
            if (PosZ != other.PosZ) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasPosX) hash ^= PosX.GetHashCode();
            if (HasPosY) hash ^= PosY.GetHashCode();
            if (HasPosZ) hash ^= PosZ.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasPosX) {
        output.WriteRawTag(8);
        output.WriteUInt32(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(16);
        output.WriteUInt32(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(24);
        output.WriteUInt32(PosZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasPosX)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(PosX);
            }
            if (HasPosY)
            {
                output.WriteRawTag(16);
                output.WriteUInt32(PosY);
            }
            if (HasPosZ)
            {
                output.WriteRawTag(24);
                output.WriteUInt32(PosZ);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (HasPosX)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PosX);
            }
            if (HasPosY)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PosY);
            }
            if (HasPosZ)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PosZ);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HousePosition other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasPosX)
            {
                PosX = other.PosX;
            }
            if (other.HasPosY)
            {
                PosY = other.PosY;
            }
            if (other.HasPosZ)
            {
                PosZ = other.PosZ;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PosX = input.ReadUInt32();
            break;
          }
          case 16: {
            PosY = input.ReadUInt32();
            break;
          }
          case 24: {
            PosZ = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            PosX = input.ReadUInt32();
                            break;
                        }
                    case 16:
                        {
                            PosY = input.ReadUInt32();
                            break;
                        }
                    case 24:
                        {
                            PosZ = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class House : pb::IMessage<House>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<House> _parser = new pb::MessageParser<House>(() => new House());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<House> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public House()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public House(House other) : this()
        {
            _hasBits0 = other._hasBits0;
            houseId_ = other.houseId_;
            name_ = other.name_;
            unknownstring_ = other.unknownstring_;
            price_ = other.price_;
            beds_ = other.beds_;
            housePosition_ = other.housePosition_ != null ? other.housePosition_.Clone() : null;
            sizeSqm_ = other.sizeSqm_;
            guildhall_ = other.guildhall_;
            city_ = other.city_;
            shop_ = other.shop_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public House Clone()
        {
            return new House(this);
        }

        /// <summary>Field number for the "house_id" field.</summary>
        public const int HouseIdFieldNumber = 1;
        private readonly static uint HouseIdDefaultValue = 0;

        private uint houseId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint HouseId
        {
            get { if ((_hasBits0 & 1) != 0) { return houseId_; } else { return HouseIdDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                houseId_ = value;
            }
        }
        /// <summary>Gets whether the "house_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasHouseId
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "house_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearHouseId()
        {
            _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_ ?? NameDefaultValue; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasName
        {
            get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearName()
        {
            name_ = null;
        }

        /// <summary>Field number for the "unknownstring" field.</summary>
        public const int UnknownstringFieldNumber = 3;
        private readonly static string UnknownstringDefaultValue = "";

        private string unknownstring_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Unknownstring
        {
            get { return unknownstring_ ?? UnknownstringDefaultValue; }
            set
            {
                unknownstring_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }
        /// <summary>Gets whether the "unknownstring" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUnknownstring
        {
            get { return unknownstring_ != null; }
        }
        /// <summary>Clears the value of the "unknownstring" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUnknownstring()
        {
            unknownstring_ = null;
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 4;
        private readonly static uint PriceDefaultValue = 0;

        private uint price_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Price
        {
            get { if ((_hasBits0 & 2) != 0) { return price_; } else { return PriceDefaultValue; } }
            set
            {
                _hasBits0 |= 2;
                price_ = value;
            }
        }
        /// <summary>Gets whether the "price" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPrice
        {
            get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "price" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPrice()
        {
            _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "beds" field.</summary>
        public const int BedsFieldNumber = 5;
        private readonly static uint BedsDefaultValue = 0;

        private uint beds_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Beds
        {
            get { if ((_hasBits0 & 4) != 0) { return beds_; } else { return BedsDefaultValue; } }
            set
            {
                _hasBits0 |= 4;
                beds_ = value;
            }
        }
        /// <summary>Gets whether the "beds" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasBeds
        {
            get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "beds" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearBeds()
        {
            _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "housePosition" field.</summary>
        public const int HousePositionFieldNumber = 6;
        private global::Protobuf.Statichousedata.HousePosition housePosition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protobuf.Statichousedata.HousePosition HousePosition
        {
            get { return housePosition_; }
            set
            {
                housePosition_ = value;
            }
        }

        /// <summary>Field number for the "size_sqm" field.</summary>
        public const int SizeSqmFieldNumber = 7;
        private readonly static uint SizeSqmDefaultValue = 0;

        private uint sizeSqm_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SizeSqm
        {
            get { if ((_hasBits0 & 8) != 0) { return sizeSqm_; } else { return SizeSqmDefaultValue; } }
            set
            {
                _hasBits0 |= 8;
                sizeSqm_ = value;
            }
        }
        /// <summary>Gets whether the "size_sqm" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSizeSqm
        {
            get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "size_sqm" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSizeSqm()
        {
            _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "guildhall" field.</summary>
        public const int GuildhallFieldNumber = 8;
        private readonly static bool GuildhallDefaultValue = false;

        private bool guildhall_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Guildhall
        {
            get { if ((_hasBits0 & 16) != 0) { return guildhall_; } else { return GuildhallDefaultValue; } }
            set
            {
                _hasBits0 |= 16;
                guildhall_ = value;
            }
        }
        /// <summary>Gets whether the "guildhall" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasGuildhall
        {
            get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "guildhall" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearGuildhall()
        {
            _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "city" field.</summary>
        public const int CityFieldNumber = 9;
        private readonly static string CityDefaultValue = "";

        private string city_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string City
        {
            get { return city_ ?? CityDefaultValue; }
            set
            {
                city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }
        /// <summary>Gets whether the "city" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasCity
        {
            get { return city_ != null; }
        }
        /// <summary>Clears the value of the "city" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCity()
        {
            city_ = null;
        }

        /// <summary>Field number for the "shop" field.</summary>
        public const int ShopFieldNumber = 10;
        private readonly static bool ShopDefaultValue = false;

        private bool shop_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Shop
        {
            get { if ((_hasBits0 & 32) != 0) { return shop_; } else { return ShopDefaultValue; } }
            set
            {
                _hasBits0 |= 32;
                shop_ = value;
            }
        }
        /// <summary>Gets whether the "shop" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasShop
        {
            get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "shop" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearShop()
        {
            _hasBits0 &= ~32;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as House);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(House other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (HouseId != other.HouseId) return false;
            if (Name != other.Name) return false;
            if (Unknownstring != other.Unknownstring) return false;
            if (Price != other.Price) return false;
            if (Beds != other.Beds) return false;
            if (!object.Equals(HousePosition, other.HousePosition)) return false;
            if (SizeSqm != other.SizeSqm) return false;
            if (Guildhall != other.Guildhall) return false;
            if (City != other.City) return false;
            if (Shop != other.Shop) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasHouseId) hash ^= HouseId.GetHashCode();
            if (HasName) hash ^= Name.GetHashCode();
            if (HasUnknownstring) hash ^= Unknownstring.GetHashCode();
            if (HasPrice) hash ^= Price.GetHashCode();
            if (HasBeds) hash ^= Beds.GetHashCode();
            if (housePosition_ != null) hash ^= HousePosition.GetHashCode();
            if (HasSizeSqm) hash ^= SizeSqm.GetHashCode();
            if (HasGuildhall) hash ^= Guildhall.GetHashCode();
            if (HasCity) hash ^= City.GetHashCode();
            if (HasShop) hash ^= Shop.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasHouseId) {
        output.WriteRawTag(8);
        output.WriteUInt32(HouseId);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasUnknownstring) {
        output.WriteRawTag(26);
        output.WriteString(Unknownstring);
      }
      if (HasPrice) {
        output.WriteRawTag(32);
        output.WriteUInt32(Price);
      }
      if (HasBeds) {
        output.WriteRawTag(40);
        output.WriteUInt32(Beds);
      }
      if (housePosition_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HousePosition);
      }
      if (HasSizeSqm) {
        output.WriteRawTag(56);
        output.WriteUInt32(SizeSqm);
      }
      if (HasGuildhall) {
        output.WriteRawTag(64);
        output.WriteBool(Guildhall);
      }
      if (HasCity) {
        output.WriteRawTag(74);
        output.WriteString(City);
      }
      if (HasShop) {
        output.WriteRawTag(80);
        output.WriteBool(Shop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasHouseId)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(HouseId);
            }
            if (HasName)
            {
                output.WriteRawTag(18);
                output.WriteString(Name);
            }
            if (HasUnknownstring)
            {
                output.WriteRawTag(26);
                output.WriteString(Unknownstring);
            }
            if (HasPrice)
            {
                output.WriteRawTag(32);
                output.WriteUInt32(Price);
            }
            if (HasBeds)
            {
                output.WriteRawTag(40);
                output.WriteUInt32(Beds);
            }
            if (housePosition_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(HousePosition);
            }
            if (HasSizeSqm)
            {
                output.WriteRawTag(56);
                output.WriteUInt32(SizeSqm);
            }
            if (HasGuildhall)
            {
                output.WriteRawTag(64);
                output.WriteBool(Guildhall);
            }
            if (HasCity)
            {
                output.WriteRawTag(74);
                output.WriteString(City);
            }
            if (HasShop)
            {
                output.WriteRawTag(80);
                output.WriteBool(Shop);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (HasHouseId)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HouseId);
            }
            if (HasName)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (HasUnknownstring)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Unknownstring);
            }
            if (HasPrice)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Price);
            }
            if (HasBeds)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Beds);
            }
            if (housePosition_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(HousePosition);
            }
            if (HasSizeSqm)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SizeSqm);
            }
            if (HasGuildhall)
            {
                size += 1 + 1;
            }
            if (HasCity)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
            }
            if (HasShop)
            {
                size += 1 + 1;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(House other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasHouseId)
            {
                HouseId = other.HouseId;
            }
            if (other.HasName)
            {
                Name = other.Name;
            }
            if (other.HasUnknownstring)
            {
                Unknownstring = other.Unknownstring;
            }
            if (other.HasPrice)
            {
                Price = other.Price;
            }
            if (other.HasBeds)
            {
                Beds = other.Beds;
            }
            if (other.housePosition_ != null)
            {
                if (housePosition_ == null)
                {
                    HousePosition = new global::Protobuf.Statichousedata.HousePosition();
                }
                HousePosition.MergeFrom(other.HousePosition);
            }
            if (other.HasSizeSqm)
            {
                SizeSqm = other.SizeSqm;
            }
            if (other.HasGuildhall)
            {
                Guildhall = other.Guildhall;
            }
            if (other.HasCity)
            {
                City = other.City;
            }
            if (other.HasShop)
            {
                Shop = other.Shop;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HouseId = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Unknownstring = input.ReadString();
            break;
          }
          case 32: {
            Price = input.ReadUInt32();
            break;
          }
          case 40: {
            Beds = input.ReadUInt32();
            break;
          }
          case 50: {
            if (housePosition_ == null) {
              HousePosition = new global::Protobuf.Statichousedata.HousePosition();
            }
            input.ReadMessage(HousePosition);
            break;
          }
          case 56: {
            SizeSqm = input.ReadUInt32();
            break;
          }
          case 64: {
            Guildhall = input.ReadBool();
            break;
          }
          case 74: {
            City = input.ReadString();
            break;
          }
          case 80: {
            Shop = input.ReadBool();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            HouseId = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Unknownstring = input.ReadString();
                            break;
                        }
                    case 32:
                        {
                            Price = input.ReadUInt32();
                            break;
                        }
                    case 40:
                        {
                            Beds = input.ReadUInt32();
                            break;
                        }
                    case 50:
                        {
                            if (housePosition_ == null)
                            {
                                HousePosition = new global::Protobuf.Statichousedata.HousePosition();
                            }
                            input.ReadMessage(HousePosition);
                            break;
                        }
                    case 56:
                        {
                            SizeSqm = input.ReadUInt32();
                            break;
                        }
                    case 64:
                        {
                            Guildhall = input.ReadBool();
                            break;
                        }
                    case 74:
                        {
                            City = input.ReadString();
                            break;
                        }
                    case 80:
                        {
                            Shop = input.ReadBool();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class HousePositionTopLeft : pb::IMessage<HousePositionTopLeft>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<HousePositionTopLeft> _parser = new pb::MessageParser<HousePositionTopLeft>(() => new HousePositionTopLeft());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HousePositionTopLeft> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HousePositionTopLeft()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HousePositionTopLeft(HousePositionTopLeft other) : this()
        {
            _hasBits0 = other._hasBits0;
            positionx_ = other.positionx_;
            positiony_ = other.positiony_;
            positionz_ = other.positionz_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HousePositionTopLeft Clone()
        {
            return new HousePositionTopLeft(this);
        }

        /// <summary>Field number for the "positionx" field.</summary>
        public const int PositionxFieldNumber = 1;
        private readonly static uint PositionxDefaultValue = 0;

        private uint positionx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Positionx
        {
            get { if ((_hasBits0 & 1) != 0) { return positionx_; } else { return PositionxDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                positionx_ = value;
            }
        }
        /// <summary>Gets whether the "positionx" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPositionx
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "positionx" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPositionx()
        {
            _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "positiony" field.</summary>
        public const int PositionyFieldNumber = 2;
        private readonly static uint PositionyDefaultValue = 0;

        private uint positiony_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Positiony
        {
            get { if ((_hasBits0 & 2) != 0) { return positiony_; } else { return PositionyDefaultValue; } }
            set
            {
                _hasBits0 |= 2;
                positiony_ = value;
            }
        }
        /// <summary>Gets whether the "positiony" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPositiony
        {
            get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "positiony" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPositiony()
        {
            _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "positionz" field.</summary>
        public const int PositionzFieldNumber = 3;
        private readonly static uint PositionzDefaultValue = 0;

        private uint positionz_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Positionz
        {
            get { if ((_hasBits0 & 4) != 0) { return positionz_; } else { return PositionzDefaultValue; } }
            set
            {
                _hasBits0 |= 4;
                positionz_ = value;
            }
        }
        /// <summary>Gets whether the "positionz" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPositionz
        {
            get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "positionz" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPositionz()
        {
            _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as HousePositionTopLeft);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HousePositionTopLeft other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Positionx != other.Positionx) return false;
            if (Positiony != other.Positiony) return false;
            if (Positionz != other.Positionz) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasPositionx) hash ^= Positionx.GetHashCode();
            if (HasPositiony) hash ^= Positiony.GetHashCode();
            if (HasPositionz) hash ^= Positionz.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasPositionx) {
        output.WriteRawTag(8);
        output.WriteUInt32(Positionx);
      }
      if (HasPositiony) {
        output.WriteRawTag(16);
        output.WriteUInt32(Positiony);
      }
      if (HasPositionz) {
        output.WriteRawTag(24);
        output.WriteUInt32(Positionz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasPositionx)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Positionx);
            }
            if (HasPositiony)
            {
                output.WriteRawTag(16);
                output.WriteUInt32(Positiony);
            }
            if (HasPositionz)
            {
                output.WriteRawTag(24);
                output.WriteUInt32(Positionz);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (HasPositionx)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Positionx);
            }
            if (HasPositiony)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Positiony);
            }
            if (HasPositionz)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Positionz);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HousePositionTopLeft other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasPositionx)
            {
                Positionx = other.Positionx;
            }
            if (other.HasPositiony)
            {
                Positiony = other.Positiony;
            }
            if (other.HasPositionz)
            {
                Positionz = other.Positionz;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Positionx = input.ReadUInt32();
            break;
          }
          case 16: {
            Positiony = input.ReadUInt32();
            break;
          }
          case 24: {
            Positionz = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Positionx = input.ReadUInt32();
                            break;
                        }
                    case 16:
                        {
                            Positiony = input.ReadUInt32();
                            break;
                        }
                    case 24:
                        {
                            Positionz = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class HouseSizeSquare : pb::IMessage<HouseSizeSquare>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<HouseSizeSquare> _parser = new pb::MessageParser<HouseSizeSquare>(() => new HouseSizeSquare());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HouseSizeSquare> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSizeSquare()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSizeSquare(HouseSizeSquare other) : this()
        {
            _hasBits0 = other._hasBits0;
            positionx_ = other.positionx_;
            positiony_ = other.positiony_;
            positionz_ = other.positionz_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSizeSquare Clone()
        {
            return new HouseSizeSquare(this);
        }

        /// <summary>Field number for the "positionx" field.</summary>
        public const int PositionxFieldNumber = 1;
        private readonly static uint PositionxDefaultValue = 0;

        private uint positionx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Positionx
        {
            get { if ((_hasBits0 & 1) != 0) { return positionx_; } else { return PositionxDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                positionx_ = value;
            }
        }
        /// <summary>Gets whether the "positionx" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPositionx
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "positionx" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPositionx()
        {
            _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "positiony" field.</summary>
        public const int PositionyFieldNumber = 2;
        private readonly static uint PositionyDefaultValue = 0;

        private uint positiony_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Positiony
        {
            get { if ((_hasBits0 & 2) != 0) { return positiony_; } else { return PositionyDefaultValue; } }
            set
            {
                _hasBits0 |= 2;
                positiony_ = value;
            }
        }
        /// <summary>Gets whether the "positiony" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPositiony
        {
            get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "positiony" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPositiony()
        {
            _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "positionz" field.</summary>
        public const int PositionzFieldNumber = 3;
        private readonly static uint PositionzDefaultValue = 0;

        private uint positionz_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Positionz
        {
            get { if ((_hasBits0 & 4) != 0) { return positionz_; } else { return PositionzDefaultValue; } }
            set
            {
                _hasBits0 |= 4;
                positionz_ = value;
            }
        }
        /// <summary>Gets whether the "positionz" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPositionz
        {
            get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "positionz" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPositionz()
        {
            _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as HouseSizeSquare);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HouseSizeSquare other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Positionx != other.Positionx) return false;
            if (Positiony != other.Positiony) return false;
            if (Positionz != other.Positionz) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasPositionx) hash ^= Positionx.GetHashCode();
            if (HasPositiony) hash ^= Positiony.GetHashCode();
            if (HasPositionz) hash ^= Positionz.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasPositionx) {
        output.WriteRawTag(8);
        output.WriteUInt32(Positionx);
      }
      if (HasPositiony) {
        output.WriteRawTag(16);
        output.WriteUInt32(Positiony);
      }
      if (HasPositionz) {
        output.WriteRawTag(24);
        output.WriteUInt32(Positionz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasPositionx)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Positionx);
            }
            if (HasPositiony)
            {
                output.WriteRawTag(16);
                output.WriteUInt32(Positiony);
            }
            if (HasPositionz)
            {
                output.WriteRawTag(24);
                output.WriteUInt32(Positionz);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (HasPositionx)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Positionx);
            }
            if (HasPositiony)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Positiony);
            }
            if (HasPositionz)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Positionz);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HouseSizeSquare other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasPositionx)
            {
                Positionx = other.Positionx;
            }
            if (other.HasPositiony)
            {
                Positiony = other.Positiony;
            }
            if (other.HasPositionz)
            {
                Positionz = other.Positionz;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Positionx = input.ReadUInt32();
            break;
          }
          case 16: {
            Positiony = input.ReadUInt32();
            break;
          }
          case 24: {
            Positionz = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Positionx = input.ReadUInt32();
                            break;
                        }
                    case 16:
                        {
                            Positiony = input.ReadUInt32();
                            break;
                        }
                    case 24:
                        {
                            Positionz = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class SqmIteratorValue : pb::IMessage<SqmIteratorValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<SqmIteratorValue> _parser = new pb::MessageParser<SqmIteratorValue>(() => new SqmIteratorValue());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SqmIteratorValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SqmIteratorValue()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SqmIteratorValue(SqmIteratorValue other) : this()
        {
            _hasBits0 = other._hasBits0;
            clientID_ = other.clientID_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SqmIteratorValue Clone()
        {
            return new SqmIteratorValue(this);
        }

        /// <summary>Field number for the "clientID" field.</summary>
        public const int ClientIDFieldNumber = 1;
        private readonly static uint ClientIDDefaultValue = 0;

        private uint clientID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ClientID
        {
            get { if ((_hasBits0 & 1) != 0) { return clientID_; } else { return ClientIDDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                clientID_ = value;
            }
        }
        /// <summary>Gets whether the "clientID" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasClientID
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "clientID" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearClientID()
        {
            _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as SqmIteratorValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SqmIteratorValue other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (ClientID != other.ClientID) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasClientID) hash ^= ClientID.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasClientID) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasClientID)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(ClientID);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (HasClientID)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientID);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SqmIteratorValue other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasClientID)
            {
                ClientID = other.ClientID;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientID = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            ClientID = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class SqmSerialize : pb::IMessage<SqmSerialize>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<SqmSerialize> _parser = new pb::MessageParser<SqmSerialize>(() => new SqmSerialize());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SqmSerialize> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SqmSerialize()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SqmSerialize(SqmSerialize other) : this()
        {
            _hasBits0 = other._hasBits0;
            item_ = other.item_.Clone();
            jumpEmpty_ = other.jumpEmpty_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SqmSerialize Clone()
        {
            return new SqmSerialize(this);
        }

        /// <summary>Field number for the "item" field.</summary>
        public const int ItemFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Protobuf.Statichousedata.SqmIteratorValue> _repeated_item_codec
            = pb::FieldCodec.ForMessage(10, global::Protobuf.Statichousedata.SqmIteratorValue.Parser);
        private readonly pbc::RepeatedField<global::Protobuf.Statichousedata.SqmIteratorValue> item_ = new pbc::RepeatedField<global::Protobuf.Statichousedata.SqmIteratorValue>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protobuf.Statichousedata.SqmIteratorValue> Item
        {
            get { return item_; }
        }

        /// <summary>Field number for the "jumpEmpty" field.</summary>
        public const int JumpEmptyFieldNumber = 2;
        private readonly static uint JumpEmptyDefaultValue = 0;

        private uint jumpEmpty_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint JumpEmpty
        {
            get { if ((_hasBits0 & 1) != 0) { return jumpEmpty_; } else { return JumpEmptyDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                jumpEmpty_ = value;
            }
        }
        /// <summary>Gets whether the "jumpEmpty" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasJumpEmpty
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "jumpEmpty" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearJumpEmpty()
        {
            _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as SqmSerialize);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SqmSerialize other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!item_.Equals(other.item_)) return false;
            if (JumpEmpty != other.JumpEmpty) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= item_.GetHashCode();
            if (HasJumpEmpty) hash ^= JumpEmpty.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      item_.WriteTo(output, _repeated_item_codec);
      if (HasJumpEmpty) {
        output.WriteRawTag(16);
        output.WriteUInt32(JumpEmpty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            item_.WriteTo(ref output, _repeated_item_codec);
            if (HasJumpEmpty)
            {
                output.WriteRawTag(16);
                output.WriteUInt32(JumpEmpty);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += item_.CalculateSize(_repeated_item_codec);
            if (HasJumpEmpty)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JumpEmpty);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SqmSerialize other)
        {
            if (other == null)
            {
                return;
            }
            item_.Add(other.item_);
            if (other.HasJumpEmpty)
            {
                JumpEmpty = other.JumpEmpty;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
          case 16: {
            JumpEmpty = input.ReadUInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            item_.AddEntriesFrom(ref input, _repeated_item_codec);
                            break;
                        }
                    case 16:
                        {
                            JumpEmpty = input.ReadUInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class HouseSerializeSqm : pb::IMessage<HouseSerializeSqm>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<HouseSerializeSqm> _parser = new pb::MessageParser<HouseSerializeSqm>(() => new HouseSerializeSqm());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HouseSerializeSqm> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSerializeSqm()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSerializeSqm(HouseSerializeSqm other) : this()
        {
            sqmserialize_ = other.sqmserialize_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSerializeSqm Clone()
        {
            return new HouseSerializeSqm(this);
        }

        /// <summary>Field number for the "sqmserialize" field.</summary>
        public const int SqmserializeFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Protobuf.Statichousedata.SqmSerialize> _repeated_sqmserialize_codec
            = pb::FieldCodec.ForMessage(26, global::Protobuf.Statichousedata.SqmSerialize.Parser);
        private readonly pbc::RepeatedField<global::Protobuf.Statichousedata.SqmSerialize> sqmserialize_ = new pbc::RepeatedField<global::Protobuf.Statichousedata.SqmSerialize>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protobuf.Statichousedata.SqmSerialize> Sqmserialize
        {
            get { return sqmserialize_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as HouseSerializeSqm);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HouseSerializeSqm other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!sqmserialize_.Equals(other.sqmserialize_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= sqmserialize_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      sqmserialize_.WriteTo(output, _repeated_sqmserialize_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            sqmserialize_.WriteTo(ref output, _repeated_sqmserialize_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += sqmserialize_.CalculateSize(_repeated_sqmserialize_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HouseSerializeSqm other)
        {
            if (other == null)
            {
                return;
            }
            sqmserialize_.Add(other.sqmserialize_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            sqmserialize_.AddEntriesFrom(input, _repeated_sqmserialize_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 26:
                        {
                            sqmserialize_.AddEntriesFrom(ref input, _repeated_sqmserialize_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class HouseSerialize : pb::IMessage<HouseSerialize>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<HouseSerialize> _parser = new pb::MessageParser<HouseSerialize>(() => new HouseSerialize());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HouseSerialize> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSerialize()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSerialize(HouseSerialize other) : this()
        {
            housesqm_ = other.housesqm_ != null ? other.housesqm_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseSerialize Clone()
        {
            return new HouseSerialize(this);
        }

        /// <summary>Field number for the "housesqm" field.</summary>
        public const int HousesqmFieldNumber = 2;
        private global::Protobuf.Statichousedata.HouseSerializeSqm housesqm_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protobuf.Statichousedata.HouseSerializeSqm Housesqm
        {
            get { return housesqm_; }
            set
            {
                housesqm_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as HouseSerialize);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HouseSerialize other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Housesqm, other.Housesqm)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (housesqm_ != null) hash ^= Housesqm.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (housesqm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Housesqm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (housesqm_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Housesqm);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (housesqm_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Housesqm);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HouseSerialize other)
        {
            if (other == null)
            {
                return;
            }
            if (other.housesqm_ != null)
            {
                if (housesqm_ == null)
                {
                    Housesqm = new global::Protobuf.Statichousedata.HouseSerializeSqm();
                }
                Housesqm.MergeFrom(other.Housesqm);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (housesqm_ == null) {
              Housesqm = new global::Protobuf.Statichousedata.HouseSerializeSqm();
            }
            input.ReadMessage(Housesqm);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 18:
                        {
                            if (housesqm_ == null)
                            {
                                Housesqm = new global::Protobuf.Statichousedata.HouseSerializeSqm();
                            }
                            input.ReadMessage(Housesqm);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class HouseData : pb::IMessage<HouseData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<HouseData> _parser = new pb::MessageParser<HouseData>(() => new HouseData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HouseData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseData()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseData(HouseData other) : this()
        {
            topleft_ = other.topleft_ != null ? other.topleft_.Clone() : null;
            housesquare_ = other.housesquare_ != null ? other.housesquare_.Clone() : null;
            serialize_ = other.serialize_ != null ? other.serialize_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HouseData Clone()
        {
            return new HouseData(this);
        }

        /// <summary>Field number for the "topleft" field.</summary>
        public const int TopleftFieldNumber = 1;
        private global::Protobuf.Statichousedata.HousePositionTopLeft topleft_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protobuf.Statichousedata.HousePositionTopLeft Topleft
        {
            get { return topleft_; }
            set
            {
                topleft_ = value;
            }
        }

        /// <summary>Field number for the "housesquare" field.</summary>
        public const int HousesquareFieldNumber = 2;
        private global::Protobuf.Statichousedata.HouseSizeSquare housesquare_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protobuf.Statichousedata.HouseSizeSquare Housesquare
        {
            get { return housesquare_; }
            set
            {
                housesquare_ = value;
            }
        }

        /// <summary>Field number for the "serialize" field.</summary>
        public const int SerializeFieldNumber = 3;
        private global::Protobuf.Statichousedata.HouseSerialize serialize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protobuf.Statichousedata.HouseSerialize Serialize
        {
            get { return serialize_; }
            set
            {
                serialize_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as HouseData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HouseData other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Topleft, other.Topleft)) return false;
            if (!object.Equals(Housesquare, other.Housesquare)) return false;
            if (!object.Equals(Serialize, other.Serialize)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (topleft_ != null) hash ^= Topleft.GetHashCode();
            if (housesquare_ != null) hash ^= Housesquare.GetHashCode();
            if (serialize_ != null) hash ^= Serialize.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (topleft_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topleft);
      }
      if (housesquare_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Housesquare);
      }
      if (serialize_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Serialize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (topleft_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Topleft);
            }
            if (housesquare_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Housesquare);
            }
            if (serialize_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Serialize);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (topleft_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topleft);
            }
            if (housesquare_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Housesquare);
            }
            if (serialize_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Serialize);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HouseData other)
        {
            if (other == null)
            {
                return;
            }
            if (other.topleft_ != null)
            {
                if (topleft_ == null)
                {
                    Topleft = new global::Protobuf.Statichousedata.HousePositionTopLeft();
                }
                Topleft.MergeFrom(other.Topleft);
            }
            if (other.housesquare_ != null)
            {
                if (housesquare_ == null)
                {
                    Housesquare = new global::Protobuf.Statichousedata.HouseSizeSquare();
                }
                Housesquare.MergeFrom(other.Housesquare);
            }
            if (other.serialize_ != null)
            {
                if (serialize_ == null)
                {
                    Serialize = new global::Protobuf.Statichousedata.HouseSerialize();
                }
                Serialize.MergeFrom(other.Serialize);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topleft_ == null) {
              Topleft = new global::Protobuf.Statichousedata.HousePositionTopLeft();
            }
            input.ReadMessage(Topleft);
            break;
          }
          case 18: {
            if (housesquare_ == null) {
              Housesquare = new global::Protobuf.Statichousedata.HouseSizeSquare();
            }
            input.ReadMessage(Housesquare);
            break;
          }
          case 26: {
            if (serialize_ == null) {
              Serialize = new global::Protobuf.Statichousedata.HouseSerialize();
            }
            input.ReadMessage(Serialize);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (topleft_ == null)
                            {
                                Topleft = new global::Protobuf.Statichousedata.HousePositionTopLeft();
                            }
                            input.ReadMessage(Topleft);
                            break;
                        }
                    case 18:
                        {
                            if (housesquare_ == null)
                            {
                                Housesquare = new global::Protobuf.Statichousedata.HouseSizeSquare();
                            }
                            input.ReadMessage(Housesquare);
                            break;
                        }
                    case 26:
                        {
                            if (serialize_ == null)
                            {
                                Serialize = new global::Protobuf.Statichousedata.HouseSerialize();
                            }
                            input.ReadMessage(Serialize);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class StaticMapData : pb::IMessage<StaticMapData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<StaticMapData> _parser = new pb::MessageParser<StaticMapData>(() => new StaticMapData());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StaticMapData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protobuf.Statichousedata.StaticmapdataReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StaticMapData()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StaticMapData(StaticMapData other) : this()
        {
            _hasBits0 = other._hasBits0;
            houseid_ = other.houseid_;
            housedata_ = other.housedata_ != null ? other.housedata_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StaticMapData Clone()
        {
            return new StaticMapData(this);
        }

        /// <summary>Field number for the "houseid" field.</summary>
        public const int HouseidFieldNumber = 1;
        private readonly static uint HouseidDefaultValue = 0;

        private uint houseid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Houseid
        {
            get { if ((_hasBits0 & 1) != 0) { return houseid_; } else { return HouseidDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                houseid_ = value;
            }
        }
        /// <summary>Gets whether the "houseid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasHouseid
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "houseid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearHouseid()
        {
            _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "housedata" field.</summary>
        public const int HousedataFieldNumber = 2;
        private global::Protobuf.Statichousedata.HouseData housedata_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protobuf.Statichousedata.HouseData Housedata
        {
            get { return housedata_; }
            set
            {
                housedata_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as StaticMapData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StaticMapData other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Houseid != other.Houseid) return false;
            if (!object.Equals(Housedata, other.Housedata)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasHouseid) hash ^= Houseid.GetHashCode();
            if (housedata_ != null) hash ^= Housedata.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasHouseid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Houseid);
      }
      if (housedata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Housedata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasHouseid)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Houseid);
            }
            if (housedata_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Housedata);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (HasHouseid)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Houseid);
            }
            if (housedata_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Housedata);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StaticMapData other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasHouseid)
            {
                Houseid = other.Houseid;
            }
            if (other.housedata_ != null)
            {
                if (housedata_ == null)
                {
                    Housedata = new global::Protobuf.Statichousedata.HouseData();
                }
                Housedata.MergeFrom(other.Housedata);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Houseid = input.ReadUInt32();
            break;
          }
          case 18: {
            if (housedata_ == null) {
              Housedata = new global::Protobuf.Statichousedata.HouseData();
            }
            input.ReadMessage(Housedata);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            Houseid = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            if (housedata_ == null)
                            {
                                Housedata = new global::Protobuf.Statichousedata.HouseData();
                            }
                            input.ReadMessage(Housedata);
                            break;
                        }
                }
            }
        }
#endif

    }

    #endregion

}

#endregion Designer generated code
